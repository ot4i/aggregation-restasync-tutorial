{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "Aggregation nodes using RESTAsyncRequest nodes with back-end services",
            "shortDescription": "Learn how to use the Aggregation nodes to fan-out and fan-in messages using asynchronous REST nodes.",
            "durationText": "This tutorial takes approximately",
            "durationTime": "5 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Knowledge Center",
                "link": "/com.ibm.etools.msgbroker.helphome.doc/help_home_msgbroker.htm"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial Topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "Aggregation nodes"
                },
                {
                    "title": "Asynchronous REST nodes"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Use IBM Integration Bus to fan-out asynchronous REST invocations and aggregate their responses."
                }
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the IIB concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
                    {
                        "section": "This tutorial demonstrates a simple REST API that receives an HTTP GET, and fans-out two separate asynchronous REST invocations. Two separate example back-end IIB REST APIs are provided which receive these requests, do a trivial transformation to upper-case the data, and reply. The fan-in part of the original REST API aggregates values from the two response messages together."
                    },
                    {
                        "section": "This tutorial requires an IIB node which is associated with a local queue manager."
                    },
                    {
                        "section": "In IBM Integration Bus, an application is a container for all the resources that are required to create a solution. A REST API is a specialized form of an application which describes a set of resources, and a set of operations that can be called on those resources from any HTTP client. This tutorial provides a REST API which holds the fan-out / fan-in aggregation flow, and two other REST APIs for the back-end flows."
                    }
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "Knowledge Center link to ",
						"description": "Developing integration solutions by using applications",
						"link": "com.ibm.etools.mft.doc/bi12002_.htm",
						"type": "help"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click Import, three REST APIs will be created in your workspace:"
                        },
                        {
                            "section": "The REST API <span class='application'>AggregationRESTAsync</span> provides a single GET operation on a resource named AggregationResponse. The subflow representation of the operation, <span class='application'>getAggregatedResponse.subflow</span>, uses RESTAsyncRequest nodes to fan-out two requests. Two RESTAsyncResponse nodes are used to fan-in reply messages from the back-end message flows." 
                        },
                        {
                            "section": "The REST API <span class='application'>AggregationRESTBackend1</span> provides a single GET operation on a resource named Backend1. The subflow representation of the operation, <span class='application'>getBackend1.subflow</span>, contains a Mapping node to uppercase the data."
                        },
                        {
                            "section": "The REST API <span class='application'>AggregationRESTBackend2</span> provides a single GET operation on a resource named Backend2. The subflow representation of the operation, <span class='application'>getBackend2.subflow</span>, contains a Mapping node to uppercase the data."
                        },
			{
			    "section": "For simplicity, the REST API and two back-end REST APIs can all be deployed to the same integration server. If you wish, you could deploy <span class='application'>AggregationRESTBackend1</span> and <span class='application'>AggregationRESTBackend2</span> to different integration servers (assuming you update the Swagger json files used by the RESTRequest nodes in <span class='application'>AggregationRESTAsync</span>)."
                        },
			{
			    "section": "Once you import the tutorial, the provided REST APIs are ready to be deployed and tested. Before you do this, you need to create the required MQ queues, as described on the Prepare tab."
			}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Developing integration solutions by using applications",
                            "link": "com.ibm.etools.mft.doc/bi12002_.htm"
                        }
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "Create queues",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": 
		     [
                {
                     "section":"Although this solution uses HTTP to route messages between the REST APIs, the aggregation nodes require MQ queues to operate.",						
                     "steps":{
                        "type":"ordered",
                        "details":[
                           {
                              "details":"Create the default IBM Integration Bus queues in WebSphere MQ by completing the following steps:",
                              "substeps":{
                                 "type":"ordered",
                                 "details":[
                                    {
                                       "details":"Open the IBM Integration Console."
                                    },
                                    {
                                       "details":"In the console window, type the following command:<br><code>server\\sample\\wmq\\iib_createqueues <span class='varname'>qmgr</span></code><br>where<br><span class='varname'>qmgr</span> is the queue manager name."
                                    }
                                 ]
                              }
                           },
                           {
                              "details":"Associate the default integration node with the queue manager by completing the following steps:",
                              "substeps":{
                                 "type":"ordered",
                                 "details":[
                                    {
                                       "details":"In the console window, stop the default integration node by typing the following command:<br><code><span class='cmdname'>mqsistop</span> -i <span class='varname'>TESTNODE_userid</span></code>"
                                    },
                                    {
                                       "details":"Associate the queue manager with the default integration node, <span class='varname'>TESTNODE_userid</span> by typing the following command:<br><code><span class='cmdname'>mqsichangebroker</span> <span class='varname'>TESTNODE_userid</span> -q <span class='varname'>qmgr</span></code><br>where<br><span class='varname'>qmgr</span> is the queue manager name"
                                    },
                                    {
                                       "details":"Start the default integration node by typing the following command:<br><code><span class='cmdname'>mqsistart</span> <span class='varname'>TESTNODE_userid</span></code>"
                                    }
                                 ]
                              }
                           }
                        ]
                     }
                  }
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[
                            {
                                "section":"<h4>Deploy the back-end REST APIs</h4>",
                                "steps":{
                                    "type":"ordered",
                                    "details":[
                                            {
                                            "details":"Deploy the <span class='application'>AggregationRESTBackend1</span> REST API, by dragging and dropping it on to the default integration server."
                                            },
                                            {
                                            "details":"Deploy the <span class='application'>AggregationRESTBackend2</span> REST API, by dragging and dropping it on to the default integration server."
                                            }
                                    ]
                                }
                            },
                            {
                                "section": "<h4>Use any web browser to simply test the REST API",
                                "steps": {
                                    "type": "ordered",
                                    "details": [
                                            {
                                            "details": "Look inside the <span class='resource'>AggregationRESTAsync</span> REST API, right-click the <span class='resource'>AggregationRESTAsync.msgflow</span> and select <span class='resource'>Open with > Message Flow Editor</span>.",
                                            "substeps":{
                                                "type": "unordered",
                                                "details": 
								                [
                                                    {
                                                    "details": "Click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow. When it appears, the <span class='resource'>Ready to record message</span> dialog can be dismissed by clicking Close."
                                                    }
                                                ]
                                            }
                                    },
                                    {
                                        "details": "Open any web browser. We will be using this to send an HTTP GET into the REST API <span class='resource'>AggregationRESTAsync</span>.",
                                        "substeps":{
                                        "type": "unordered",
                                        "details": 
								        [
                                        {
                                          "details": "In the address bar of the browser paste in the URL for the HTTP GET operation. If you have used default settings, then this is likely to be:"
                                        },
                                        {
                                          "details": "http://localhost:7080/aggregationrestasync/v1/AggregatedResponse?Field1=value1&Field2=value2"
                                        },
                                        {
                                          "details": "Note that this URL includes query parameters with the values <span class='resource'>value1</span> and <span class='resource'>value2</span>. One of these values will be sent to each back-end REST API. The back end REST APIs will uppercase the values and reply."
                                        }
                                        ]
                                        }
                                    },
                                    {
                                    "details": "Return to <span class='resource'>AggregationRESTAsync.msgflow</span>.",
                                    "substeps":{
                                    "type": "unordered",
                                    "details": 
								    [
                                        {
                                          "details": "Click the View Path icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/viewPath.png' alt='' /> to see the path which the message took through the flow and see the message content on the path. You can open the subflow <span class='resource'>getAggregatedResponse.subflow</span> and click on the flow connections to see what the message tree looked like as it traversed through the REST API."
                                        },
                    				    {
                                            "details": "Back in the web browser, you should see the final output message carries return data from both of the back-end REST APIs which has been changed to upper case. It should look like this:"
				                        },				                                                                {
                                          "details": "<span class='resource'>{&quot;ResponseBackend1&quot;:&quot;VALUE1&quot;,&quot;ResponseBackend2&quot;:&quot;VALUE2&quot;}</span>"
                                        }
                                    ]
                                    }
                                    }
                                ]
                            }
                        },
			{
			    "section": "This tutorial has shown the Aggregation nodes orchestrating an asynchronous fan-out and an associated fan-in of messages using asynchronous REST nodes."
			}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Message Flow Aggregation",
                            "link": "com.ibm.etools.mft.doc/ac00660_.htm"
                        }
                    ]
                },
		"exits": 
		{
			"title": "Run Exits",
			"details": 
			[
				{
					"name": "Clean Up",
					"description": "Clean up and remove any changes in your workspace made by the tutorial.",
					"method": "cleanUp()"
				}
			]
		}
            }
        }
    }
}
